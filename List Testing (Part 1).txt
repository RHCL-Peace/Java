List Testing (Part 1)
Hesham Natouf
CS 221


Part 1
•	List all possible tests for each scenario that either starts with an empty list or ends with an empty list, specifically scenarios 1-5 and 12-15. Scenario 1 is given to you.
1) no list -> constructor -> []
  Tests:
    addToFront(A) throws no Exception
    addToRear(A) throws no Exception
    addAfter(A, B) throws NoSuchElementException
    add(A) throws no Exception
    add(-1, A) throws IndexOutOfBoundsException
    add(0, A) throws no Exception
    add(1, A) throws IndexOutOfBoundsException
    removeFirst() throws NoSuchElementException
    removeLast() throws NoSuchElementException
    remove(A) throws NoSuchElementException
    remove(-1) throws IndexOutOfBoundsException
    remove(0) throws IndexOutOfBoundsException
    set(-1, A) throws IndexOutOfBoundsException
    set(0, A) throws IndexOutOfBoundsException
    get(-1) throws IndexOutOfBoundsException
    get(0) throws IndexOutOfBoundsException
    indexOf(A) returns -1
    first() throws NoSuchElementException
    last() throws NoSuchElementException
    contains(A) returns false
    isEmpty() returns true
    size() returns 0
    iterator() returns an Iterator reference
    listIterator() throws UnsupportedOperationException
    listIterator(0) throws UnsupportedOperationException
    toString returns "[]"

2) [] -> addToFront(A) -> [A]
  Tests:
   addToFront(B) throws no Exceptions
   addToRear(B) throws no Exceptions
   addAfter(B,A) throws no Exceptions
   addAfter(B,C) throws ElementNotFoundException
   removeFirst() returns A
   removeLast() returns A
   remove(A) returns A
   remove(B) throws ElementNotFoundException
   first() returns A
   last() returns A
   contains(A) returns true
   contains(B) returns false
   isEmpty() returns false
   size() returns 1
   iterator() returns an Iterator reference
   toString() returns “[A]”
 

3) [] -> addToRear(A) -> [A]
  Tests:
   addToFront(B) throws no Exceptions
   addToRear(B) throws no Exceptions
   addAfter(B,A) throws no Exceptions
   addAfter(C,B) throws ElementNotFoundException
   removeFirst() returns A
   removeLast() returns A
   remove(A) returns A
   remove(B) throws ElementNotFoundException
   first() returns A
   last() returns A
   contains(A) returns true
   contains(B) returns false
   isEmpty() returns false
   size() returns 1
   iterator() returns an Iterator reference
   toString() returns “[A]”
   

4) [] -> add(A) -> [A]
  Tests:
   addToFront(B) throws no Exceptions
   addToRear(B) throws no Exceptions
   addAfter(B,A) throws no Exceptions
   addAfter(C,B) throws ElementNotFoundException
   remove(A) returns A
   remove(B) throws ElementNotFoundException
   first() returns A
   last() returns A
   contains(A) returns true
   contains(B) returns false
   isEmpty() returns false
   toString() returns “[A]”
   


5) [] -> add(0,A) -> [A]
  Tests:

12) [A] -> removeFirst() -> []
  Tests:
   addToFront(A) throws no Exceptions
   addToRear(A) throws no Exceptions
   addAfter(B,A) throws no Exceptions
   addAfter(B,C) throws ElementNotFoundException
   removeFirst() throws ElementNotFoundException
   removeLast() throws ElementNotFoundException
   remove(A) throws ElementNotFoundException
   first() throws ElementNotFoundException
   last() throws ElementNotFoundException
   contains(A) returns false
   isEmpty() returns true
   size() returns 0
   iterator() returns an Iterator reference
   toString() returns “[ ]”


13) [A] -> removeLast() -> []
  Tests:
   addToFront(A) throws no Exceptions
   addToRear(A) throws no Exceptions
   addAfter(B,A) throws no Exceptions
   addAfter(C,B) throws ElementNotFoundException
   removeFirst() throws ElementNotFoundException
   removeLast() throws ElementNotFoundException
   remove(A) throws ElementNotFoundException
   first() throws ElementNotFoundException
   last() throws ElementNotFoundException
   contains(A) returns false
   isEmpty() returns true
   size() returns 0
   iterator() returns an Iterator reference
   toString() returns “[ ]”


14) [A] -> remove(A) -> []
  Tests:
   addToFront(A) throws no Exceptions
   addToRear(A) throws no Exceptions
   addAfter(B,A) throws no Exceptions
   addAfter(B,C) throws ElementNotFoundException
   removeFirst() throws ElementNotFoundException
   removeLast() throws ElementNotFoundException
   remove(A) throws ElementNotFoundException
   first() throws ElementNotFoundException
   last() throws ElementNotFoundException
   contains(A) returns false
   isEmpty() returns true
   size() returns 0
   iterator() returns an Iterator reference
   toString() returns “[ ]”


15) [A] -> remove(0) -> []
  Tests:
   addToFront(A) throws no Exceptions
   addToRear(A) throws no Exceptions
   addAfter(B,A) throws no Exceptions
   addAfter(B,C) throws ElementNotFoundException
   removeFirst() throws ElementNotFoundException
   removeLast() throws ElementNotFoundException
   remove(A) throws ElementNotFoundException
   first() throws ElementNotFoundException
   last() throws ElementNotFoundException
   contains(A) returns false
   isEmpty() returns true
   size() returns 0
   iterator() returns an Iterator reference
   toString() returns “[ ]”
   


Part 2
•	List all possible tests for scenarios that result in a list of one element, specifically scenarios 16 and 25-30.
16) [A] -> set(0,B) -> [B]
  Tests:
   addToFront(C) throws no Exceptions
   addToRear(C) throws no Exceptions
   addAfter(C,B) throws no Exceptions
   addAfter(C,A) throws ElementNotFoundException
   removeFirst() returns B
   removeLast() returns B
   remove(A) returns A
   first() returns B
   last() returns B
   contains(A) returns false
   contains(B) returns true
   isEmpty() returns false
   size() returns 1
   iterator() returns an Iterator reference
   toString() returns “[B]”
   



25) [A,B] -> removeFirst() -> [B]
  Tests:
   addToFront(C) throws no Exceptions
   addToRear(C) throws no Exceptions
   addAfter(C,B) throws no Exceptions
   addAfter(C,A) throws ElementNotFoundException
      removeFirst() returns B
   removeLast() returns B
   remove(A) returns A
   first() returns B
   last() returns B
   contains(A) returns false
   contains(B) returns true
   isEmpty() returns false
   size() returns 1
   iterator() returns an Iterator reference
   toString() returns “[B]

26) [A,B] -> removeLast() -> [A]
  Tests:
   addToFront(C) throws no Exceptions
   addToRear(C) throws no Exceptions
   addAfter(C,B) throws no Exceptions
   addAfter(C,A) throws ElementNotFoundException
      removeFirst() returns A
   removeLast() returns A
   remove(A) returns A
   first() returns A
   last() returns A
   contains(A) returns true
   contains(B) returns false
   isEmpty() returns false
   size() returns 1
   iterator() returns an Iterator reference
   toString() returns “[B]”
   

27) [A,B] -> remove(A) -> [B]
  Tests:
   addToFront(C) throws no Exceptions
   addToRear(C) throws no Exceptions
   addAfter(C,B) throws no Exceptions
   addAfter(C,A) throws ElementNotFoundException
   removeFirst() returns B
   removeLast() returns B
   remove(B) returns B
   first() returns B
   last() returns B
   contains(A) returns false
   contains(B) returns true
   isEmpty() returns false
   size() returns 1
   iterator() returns an Iterator reference
   toString() returns “[B]


28) [A,B] -> remove(B) -> [A]
  Tests:
   addToFront(C) throws no Exceptions
   addToRear(C) throws no Exceptions
   addAfter(C,B) throws no Exceptions
   addAfter(C,A) throws ElementNotFoundException
   removeFirst() returns A
   removeLast() returns A
   remove(A) returns A
   first() returns A
   last() returns A
   contains(A) returns true
   contains(B) returns false
   isEmpty() returns false
   size() returns 1
   iterator() returns an Iterator reference
   toString() returns “[B]”
   


29) [A,B] -> remove(0) -> [B]
  Tests:
   addToFront(C) throws no Exceptions
   addToRear(C) throws no Exceptions
   addAfter(C,B) throws no Exceptions
   addAfter(C,A) throws ElementNotFoundException
   removeFirst() returns B
   removeLast() returns B
   remove(B) returns B
   first() returns B
   last() returns B
   contains(A) returns false
   contains(B) returns true
   isEmpty() returns false
   size() returns 1
   iterator() returns an Iterator reference
   toString() returns “[B]”
   


30) [A,B] -> remove(1) -> [A]
  Tests:
   addToFront(C) throws no Exceptions
   addToRear(C) throws no Exceptions
   addAfter(C,B) throws no Exceptions
   addAfter(C,A) throws ElementNotFoundException
   removeFirst() returns A
   removeLast() returns A
   remove(A) returns A
   first() returns A
   last() returns A
   contains(A) returns true
   contains(B) returns false
   isEmpty() returns false
   size() returns 1
   iterator() returns an Iterator reference
   toString() returns “[B]”
   




Part 3 
•	List all possible tests for at least two scenarios (in addition to given scenario 6) that start with a one-element list and result in a two-element list.
6) [A] -> addToFront(B) -> [B,A]
  Tests:
    addToFront(C) throws no Exceptions
    addToRear(C) throws no Exceptions
    addAfter(C, B) throws no Exceptions
    addAfter(C, A) throws no Exceptions
    addAfter(C, D) throws NoSuchElementException
    add(C) throws no Exception
    add(-1,C) throws IndexOutOfBoundsException
    add(0,C) throws no Exception
    add(1,C) throws no Exception
    add(2,C) throws no Exception
    add(3,C) throws IndexOutOfBoundsException
    removeFirst() returns B
    removeLast() returns A
    remove(A) returns A
    remove(B) returns B
    remove(C) throws NoSuchElementException
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns B
    remove(1) returns A
    remove(2) throws IndexOutOfBoundsException
    set(-1,C) throws IndexOutOfBoundsException
    set(0,C) throws no Exception
    set(1,C) throws no Exception
    set(2,C) throws IndexOutOfBoundsException
    get(-1) throws IndexOutOfBoundsException
    get(0) returns B
    get(1) returns A
    get(2) throws IndexOutOfBoundsException
    indexOf(A) returns 1
    indexOf(B) returns 0
    indexOf(C) returns -1
    first() returns B
    last() returns A
    contains(A) returns true
    contains(B) returns true
    contains(C) returns false
    isEmpty() returns false
    size() returns 2
    iterator() returns an Iterator reference
    listIterator() throws UnsupportedOperationException
    listIterator(0) throws UnsupportedOperationException
    toString() returns "[B, A]"

7) [A] -> addToRear(B) -> [A,B]
 Tests:
    removeFirst() returns A
    removeLast() returns B
    remove(A) returns A
    remove(B) returns B
    remove(C) throws NoSuchElementException
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns A
    remove(1) returns B
    remove(2) throws IndexOutOfBoundsException
    set(-1,C) throws IndexOutOfBoundsException
    set(0,C) throws no Exception
    set(1,C) throws no Exception
    set(2,C) throws IndexOutOfBoundsException
    get(-1) throws IndexOutOfBoundsException
    get(0) returns A
    get(1) returns B
    get(2) throws IndexOutOfBoundsException
    indexOf(A) returns 1
    indexOf(B) returns 0
    indexOf(C) returns -1
    first() returns B
    last() returns A
    contains(A) returns true
    contains(B) returns true
    contains(C) returns false
    isEmpty() returns false
    size() returns 2
    iterator() returns an Iterator reference
    listIterator() throws UnsupportedOperationException
    listIterator(0) throws UnsupportedOperationException
    toString() returns "[A, B]"


8) [A] -> addAfter(B,A) -> [A,B]
 Tests:
   removeFirst() returns A
    removeLast() returns B
    remove(A) returns A
    remove(B) returns B
    remove(C) throws NoSuchElementException
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns A
    remove(1) returns B
    remove(2) throws IndexOutOfBoundsException
    set(-1,C) throws IndexOutOfBoundsException
    set(0,C) throws no Exception
    set(1,C) throws no Exception
    set(2,C) throws IndexOutOfBoundsException
    get(-1) throws IndexOutOfBoundsException
    get(0) returns A
    get(1) returns B
    get(2) throws IndexOutOfBoundsException
    indexOf(A) returns 1
    indexOf(B) returns 0
    indexOf(C) returns -1
    first() returns B
    last() returns A
    contains(A) returns true
    contains(B) returns true
    contains(C) returns false
    isEmpty() returns false
    size() returns 2
    iterator() returns an Iterator reference
    listIterator() throws UnsupportedOperationException
    listIterator(0) throws UnsupportedOperationException
    toString() returns "[A, B]"


9) [A] -> add(B) -> [A,B]
 Tests:
    removeFirst() returns A
    removeLast() returns B
    remove(A) returns A
    remove(B) returns B
    remove(C) throws NoSuchElementException
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns A
    remove(1) returns B
    remove(2) throws IndexOutOfBoundsException
    set(-1,C) throws IndexOutOfBoundsException
    set(0,C) throws no Exception
    set(1,C) throws no Exception
    set(2,C) throws IndexOutOfBoundsException
    get(-1) throws IndexOutOfBoundsException
    get(0) returns A
    get(1) returns B
    get(2) throws IndexOutOfBoundsException
    indexOf(A) returns 1
    indexOf(B) returns 0
    indexOf(C) returns -1
    first() returns B
    last() returns A
    contains(A) returns true
    contains(B) returns true
    contains(C) returns false
    isEmpty() returns false
    size() returns 2
    iterator() returns an Iterator reference
    listIterator() throws UnsupportedOperationException
    listIterator(0) throws UnsupportedOperationException
    toString() returns "[A, B]"


10) [A] -> add(0,B) -> [B,A]
  Tests:
    removeFirst() returns B
    removeLast() returns A
    remove(A) returns A
    remove(B) returns B
    remove(C) throws NoSuchElementException
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns B
    remove(1) returns A
    remove(2) throws IndexOutOfBoundsException
    set(-1,C) throws IndexOutOfBoundsException
    set(0,C) throws no Exception
    set(1,C) throws no Exception
    set(2,C) throws IndexOutOfBoundsException
    get(-1) throws IndexOutOfBoundsException
    get(0) returns B
    get(1) returns A
    get(2) throws IndexOutOfBoundsException
    indexOf(A) returns 1
    indexOf(B) returns 0
    indexOf(C) returns -1
    first() returns B
    last() returns A
    contains(A) returns true
    contains(B) returns true
    contains(C) returns false
    isEmpty() returns false
    size() returns 2
    iterator() returns an Iterator reference
    listIterator() throws UnsupportedOperationException
    listIterator(0) throws UnsupportedOperationException
    toString() returns "[B, A]"


11) [A] -> add(1,B) -> [A,B]
  Tests:
    removeFirst() returns A
    removeLast() returns B
    remove(A) returns A
    remove(B) returns B
    remove(C) throws NoSuchElementException
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns A
    remove(1) returns B
    remove(2) throws IndexOutOfBoundsException
    set(-1,C) throws IndexOutOfBoundsException
    set(0,C) throws no Exception
    set(1,C) throws no Exception
    set(2,C) throws IndexOutOfBoundsException
    get(-1) throws IndexOutOfBoundsException
    get(0) returns A
    get(1) returns B
    get(2) throws IndexOutOfBoundsException
    indexOf(A) returns 1
    indexOf(B) returns 0
    indexOf(C) returns -1
    first() returns B
    last() returns A
    contains(A) returns true
    contains(B) returns true
    contains(C) returns false
    isEmpty() returns false
    size() returns 2
    iterator() returns an Iterator reference
    listIterator() throws UnsupportedOperationException
    listIterator(0) throws UnsupportedOperationException
    toString() returns "[A, B]"

Part 4
•	List all possible tests for at least two scenarios that start with a two-element list and result in a three-element list.
17) [A,B] -> addToFront(C) -> [C,A,B]
  Test:
   addToFront(C) throws no Exceptions
   addToRear(C) throws no Exceptions
   addAfter(C,B) throws no Exceptions
   addAfter(C,A) throws no Exception
   addAfter(C,D) throws ElementNotFoundException
   removeFirst() returns C
   removeLast() returns B
   remove(A) returns A
   remove(B) returns B
   remove(C) returns C
   first() returns C
   last() returns B
   contains(A) returns true
   contains(B) returns true
   contains(C) returns true
   contains(D) return false
   isEmpty() returns false
   size() returns 3
   iterator() returns an Iterator reference
   toString() returns “[C,A,B]”
   

	
18) [A,B] -> addToRear(C) -> [A,B,C]
  Test:
   addToFront(C) throws no Exceptions
   addToRear(C) throws no Exceptions
   addAfter(C,B) throws no Exceptions
   addAfter(C,A) throws no Exception
   addAfter(C,D) throws ElementNotFoundException
   removeFirst() returns B
   removeLast() returns C
   remove(A) returns A
   remove(B) returns B
   remove(C) returns C
   first() returns B
   last() returns C
   contains(A) returns true
   contains(B) returns true
   contains(C) returns true
   contains(D) return false
   isEmpty() returns false
   size() returns 3
   iterator() returns an Iterator reference
   toString() returns “[A,B,C]”


19) [A,B] -> addAfter(C,A) -> [A,C,B]
  Test:
   addToFront(C) throws no Exceptions
   addToRear(C) throws no Exceptions
   addAfter(C,B) throws no Exceptions
   addAfter(C,A) throws no Exception
   addAfter(C,D) throws ElementNotFoundException
   removeFirst() returns B
   removeLast() returns C
   remove(A) returns A
   remove(B) returns B
   remove(C) returns C
   first() returns B
   last() returns C
   contains(A) returns true
   contains(B) returns true
   contains(C) returns true
   contains(D) return false
   isEmpty() returns false
   size() returns 3
   iterator() returns an Iterator reference
   toString() returns “[A,B,C]”


20) [A,B] -> addAfter(C,B) -> [A,B,C]
  Test:
   addToFront(C) throws no Exceptions
   addToRear(C) throws no Exceptions
   addAfter(C,B) throws no Exceptions
   addAfter(C,A) throws no Exception
   addAfter(C,D) throws ElementNotFoundException
   removeFirst() returns B
   removeLast() returns C
   remove(A) returns A
   remove(B) returns B
   remove(C) returns C
   first() returns B
   last() returns C
   contains(A) returns true
   contains(B) returns true
   contains(C) returns true
   contains(D) return false
   isEmpty() returns false
   size() returns 3
   iterator() returns an Iterator reference
   toString() returns “[A,B,C]”


21) [A,B] -> add(C) -> [A,B,C]
  Test:
   addToFront(C) throws no Exceptions
   addToRear(C) throws no Exceptions
   addAfter(C,B) throws no Exceptions
   addAfter(C,A) throws no Exception
   addAfter(C,D) throws ElementNotFoundException
   removeFirst() returns B
   removeLast() returns C
   remove(A) returns A
   remove(B) returns B
   remove(C) returns C
   first() returns B
   last() returns C
   contains(A) returns true
   contains(B) returns true
   contains(C) returns true
   contains(D) return false
   isEmpty() returns false
   size() returns 3
   iterator() returns an Iterator reference
   toString() returns “[A,B,C]”


22) [A,B] -> add(0,C) -> [C,A,B]
  Test:
   addToFront(C) throws no Exceptions
   addToRear(C) throws no Exceptions
   addAfter(C,B) throws no Exceptions
   addAfter(C,A) throws no Exception
   addAfter(C,D) throws ElementNotFoundException
   removeFirst() returns B
   removeLast() returns C
   remove(A) returns A
   remove(B) returns B
   remove(C) returns C
   first() returns B
   last() returns C
   contains(A) returns true
   contains(B) returns true
   contains(C) returns true
   contains(D) return false
   isEmpty() returns false
   size() returns 3
   iterator() returns an Iterator reference
   toString() returns “[A,B,C]”


23) [A,B] -> add(1,C) -> [A,C,B]
  Test:
   addToFront(C) throws no Exceptions
   addToRear(C) throws no Exceptions
   addAfter(C,B) throws no Exceptions
   addAfter(C,A) throws no Exception
   addAfter(C,D) throws ElementNotFoundException
   removeFirst() returns B
   removeLast() returns C
   remove(A) returns A
   remove(B) returns B
   remove(C) returns C
   first() returns B
   last() returns C
   contains(A) returns true
   contains(B) returns true
   contains(C) returns true
   contains(D) return false
   isEmpty() returns false
   size() returns 3
   iterator() returns an Iterator reference
   toString() returns “[A,B,C]”


24) [A,B] -> add (2,C) -> [A,B,C]
  Test:
   addToFront(C) throws no Exceptions
   addToRear(C) throws no Exceptions
   addAfter(C,B) throws no Exceptions
   addAfter(C,A) throws no Exception
   addAfter(C,D) throws ElementNotFoundException
   removeFirst() returns B
   removeLast() returns C
   remove(A) returns A
   remove(B) returns B
   remove(C) returns C
   first() returns B
   last() returns C
   contains(A) returns true
   contains(B) returns true
   contains(C) returns true
   contains(D) return false
   isEmpty() returns false
   size() returns 3
   iterator() returns an Iterator reference
   toString() returns “[A,B,C]”



Part 5
•	List all possible tests for at least two scenarios (in addition to given scenario 39) that start with a three-element list and result in a two-element list. 
39) [A,B,C] -> remove(1) -> [A,C]
  Tests:
    addToFront(D) throws no Exceptions
    addToRear(D) throws no Exceptions
    addAfter(D, A) throws no Exceptions
    addAfter(D, C) throws no Exceptions
    addAfter(D, B) throws NoSuchElementException
    add(D) throws no Exception
    add(-1, D) throws IndexOutOfBoundsException
    add(0, D) throws no Exception
    add(1, D) throws no Exception
    add(2, D) throws no Exception
    add(3, D) throws IndexOutOfBoundsException
    removeFirst() returns A
    removeLast() returns C
    remove(A) returns A
    remove(B) throws NoSuchElementException
    remove(C) returns C
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns A
    remove(1) returns C
    remove(2) throws IndexOutOfBoundsException
    set(-1, D) throws IndexOutOfBoundsException
    set(0, D) throws no Exception
    set(1, D) throws no Exception
    set(2, D) throws IndexOutOfBoundsException
    get(-1) throws IndexOutOfBoundsException
    get(0) returns A
    get(1) returns C
    get(2) throws IndexOutOfBoundsException
    indexOf(A) returns 0
    indexOf(B) returns -1
    indexOf(C) returns 1
    first() returns A
    last() returns C
    contains(A) returns true
    contains(B) returns false
    contains(C) returns true
    isEmpty() returns false
    size() returns 2
    iterator() returns an Iterator reference
    listIterator() throws UnsupportedOperationException
    listIterator(0) throws UnsupportedOperationException
    toString() returns "[A, C]"

33) [A,B,C] -> removeFirst() -> [B,C]
  Test:
    addToFront(D) throws no Exceptions
    addToRear(D) throws no Exceptions
    addAfter(D, A) throws no Exceptions
    addAfter(D, C) throws no Exceptions
    addAfter(D, B) throws NoSuchElementException
    add(D) throws no Exception
    add(-1, D) throws IndexOutOfBoundsException
    add(0, D) throws no Exception
    add(1, D) throws no Exception
    add(2, D) throws no Exception
    add(3, D) throws IndexOutOfBoundsException
    removeFirst() returns A
    removeLast() returns C
    remove(A) returns NoSuchElementException
    remove(B) throws B
    remove(C) returns C
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns B
    remove(1) returns C
    remove(2) throws IndexOutOfBoundsException
    first() returns B
    last() returns C
    contains(A) returns false
    contains(B) returns true
    contains(C) returns true
    isEmpty() returns false
    size() returns 2
    iterator() returns an Iterator reference
    listIterator() throws UnsupportedOperationException
    listIterator(0) throws UnsupportedOperationException
    toString() returns "[B, C]"


34) [A,B,C] -> removeLast() -> [A,B]
  Test:
    addToFront(D) throws no Exceptions
    addToRear(D) throws no Exceptions
    addAfter(D, A) throws no Exceptions
    addAfter(D, C) throws no Exceptions
    addAfter(D, B) throws NoSuchElementException
    add(D) throws no Exception
    add(-1, D) throws IndexOutOfBoundsException
    add(0, D) throws no Exception
    add(1, D) throws no Exception
    add(2, D) throws no Exception
    add(3, D) throws IndexOutOfBoundsException
    removeFirst() returns A
    removeLast() returns B
    remove(A) returns A
    remove(B) throws C
    remove(C) returns NoSuchElementException
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns A
    remove(1) returns C
    remove(2) throws IndexOutOfBoundsException
    first() returns A
    last() returns B
    contains(A) returns true
    contains(B) returns true
    contains(C) returns false
    isEmpty() returns false
    size() returns 2
    iterator() returns an Iterator reference
    listIterator() throws UnsupportedOperationException
    listIterator(0) throws UnsupportedOperationException
    toString() returns "[A, B]"


35) [A,B,C] -> remove(A) -> [B,C]
  Test:
    addToFront(D) throws no Exceptions
    addToRear(D) throws no Exceptions
    addAfter(D, A) throws no Exceptions
    addAfter(D, C) throws no Exceptions
    addAfter(D, B) throws NoSuchElementException
    add(D) throws no Exception
    add(-1, D) throws IndexOutOfBoundsException
    add(0, D) throws no Exception
    add(1, D) throws no Exception
    add(2, D) throws no Exception
    add(3, D) throws IndexOutOfBoundsException
    removeFirst() returns B
    removeLast() returns C
    remove(A) returns NoSuchElementException
    remove(B) throws B
    remove(C) returns C
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns B
    remove(1) returns C
    remove(2) throws IndexOutOfBoundsException
    first() returns B
    last() returns C
    contains(A) returns false
    contains(B) returns true
    contains(C) returns true
    isEmpty() returns false
    size() returns 2
    iterator() returns an Iterator reference
    listIterator() throws UnsupportedOperationException
    listIterator(0) throws UnsupportedOperationException
    toString() returns "[B, C]"


36) [A,B,C] -> remove(B) -> [A,C]
  Test:
    addToFront(D) throws no Exceptions
    addToRear(D) throws no Exceptions
    addAfter(D, A) throws no Exceptions
    addAfter(D, C) throws no Exceptions
    addAfter(D, B) throws NoSuchElementException
    add(D) throws no Exception
    add(-1, D) throws IndexOutOfBoundsException
    add(0, D) throws no Exception
    add(1, D) throws no Exception
    add(2, D) throws no Exception
    add(3, D) throws IndexOutOfBoundsException
    removeFirst() returns A
    removeLast() returns C
    remove(A) returns A
    remove(B) throws NoSuchElementException
    remove(C) returns C
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns A
    remove(1) returns C
    remove(2) throws IndexOutOfBoundsException
    first() returns A
    last() returns C
    contains(A) returns true
    contains(B) returns false
    contains(C) returns true
    isEmpty() returns false
    size() returns 2
    iterator() returns an Iterator reference
    listIterator() throws UnsupportedOperationException
    listIterator(0) throws UnsupportedOperationException
    toString() returns "[A, C]"


37) [A,B,C] -> remove(C) -> [A,B]
  Test:
    addToFront(D) throws no Exceptions
    addToRear(D) throws no Exceptions
    addAfter(D, A) throws no Exceptions
    addAfter(D, C) throws no Exceptions
    addAfter(D, B) throws NoSuchElementException
    add(D) throws no Exception
    add(-1, D) throws IndexOutOfBoundsException
    add(0, D) throws no Exception
    add(1, D) throws no Exception
    add(2, D) throws no Exception
    add(3, D) throws IndexOutOfBoundsException
    removeFirst() returns A
    removeLast() returns B
    remove(A) returns A
    remove(B) throws B
    remove(C) returns NoSuchElementException
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns A
    remove(1) returns B
    remove(2) throws IndexOutOfBoundsException
    first() returns A
    last() returns B
    contains(A) returns true
    contains(B) returns true
    contains(C) returns false
    isEmpty() returns false
    size() returns 2
    iterator() returns an Iterator reference
    listIterator() throws UnsupportedOperationException
    listIterator(0) throws UnsupportedOperationException
    toString() returns "[A, B]"


38) [A,B,C] -> remove(0) -> [B,C]
  Test:
    addToFront(D) throws no Exceptions
    addToRear(D) throws no Exceptions
    addAfter(D, A) throws no Exceptions
    addAfter(D, C) throws no Exceptions
    addAfter(D, B) throws NoSuchElementException
    add(D) throws no Exception
    add(-1, D) throws IndexOutOfBoundsException
    add(0, D) throws no Exception
    add(1, D) throws no Exception
    add(2, D) throws no Exception
    add(3, D) throws IndexOutOfBoundsException
    removeFirst() returns B
    removeLast() returns C
    remove(A) returns NoSuchElementException
    remove(B) throws B
    remove(C) returns C
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns B
    remove(1) returns C
    remove(2) throws IndexOutOfBoundsException
    first() returns B
    last() returns C
    contains(A) returns false
    contains(B) returns true
    contains(C) returns true
    isEmpty() returns false
    size() returns 2
    iterator() returns an Iterator reference
    listIterator() throws UnsupportedOperationException
    listIterator(0) throws UnsupportedOperationException
    toString() returns "[B, C]"


40) [A,B,C] -> remove(2) -> [A,B]
  Test:
    addToFront(D) throws no Exceptions
    addToRear(D) throws no Exceptions
    addAfter(D, A) throws no Exceptions
    addAfter(D, C) throws no Exceptions
    addAfter(D, B) throws NoSuchElementException
    add(D) throws no Exception
    add(-1, D) throws IndexOutOfBoundsException
    add(0, D) throws no Exception
    add(1, D) throws no Exception
    add(2, D) throws no Exception
    add(3, D) throws IndexOutOfBoundsException
    removeFirst() returns A
    removeLast() returns B
    remove(A) returns A
    remove(B) throws B
    remove(C) returns NoSuchElementException
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns A
    remove(1) returns B
    remove(2) throws IndexOutOfBoundsException
    first() returns A
    last() returns C
    contains(A) returns true
    contains(B) returns true
    contains(C) returns fasle
    isEmpty() returns false
    size() returns 2
    iterator() returns an Iterator reference
    listIterator() throws UnsupportedOperationException
    listIterator(0) throws UnsupportedOperationException
    toString() returns "[A, B]"

